<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <Type Name="trimja::EvalString">
    <Expand>
      <CustomListItems MaxItemsPerView="100">
        <Variable Name="mask" InitialValue="((trimja::EvalString::Offset)1) &lt;&lt; (sizeof(trimja::EvalString::Offset) * 8 - 1)"/>
        <Variable Name="rawLength" InitialValue="(trimja::EvalString::Offset)0"/>
        <Variable Name="isVariable" InitialValue="false"/>
        <Variable Name="length" InitialValue="(trimja::EvalString::Offset)0"/>
        <Variable Name="it" InitialValue="m_data.isShortString() ? m_data._Mypair._Myval2._Bx._Buf : m_data._Mypair._Myval2._Bx._Ptr"/>
        <Loop>
          <Break Condition="*it == '\0'" />
          <Exec>rawLength = *(const trimja::EvalString::Offset*)it</Exec>
          <Exec>isVariable = (rawLength &amp; mask)</Exec>
          <Exec>length = rawLength &amp; ~mask</Exec>
          <If Condition="isVariable">
            <Item Name="var">it + sizeof(trimja::EvalString::Offset),[length]s8b</Item>
          </If>
          <If Condition="!isVariable">
            <Item Name="text">it + sizeof(trimja::EvalString::Offset),[length]s8</Item>
          </If>
          <Exec>it += length + sizeof(length)</Exec>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="trimja::EvalString::const_iterator">
    <Intrinsic Name="isEnd" Expression="*m_pos == '\0'"/>
    <Intrinsic Name="rawLength" Expression="*(const trimja::EvalString::Offset*)m_pos"/>
    <Intrinsic Name="mask" Expression="(trimja::EvalString::Offset)1 &lt;&lt; (sizeof(trimja::EvalString::Offset) * 8 - 1)"/>
    <Intrinsic Name="isVariable" Expression="(rawLength() &amp; mask()) != 0"/>
    <Intrinsic Name="length" Expression="rawLength() &amp; ~mask()"/>
    <DisplayString Condition="isEnd()">{{ end }}</DisplayString>
    <DisplayString Condition="!isEnd() &amp;&amp; isVariable()">{{ var = {m_pos + sizeof(trimja::EvalString::Offset),[length()]s8b} }}</DisplayString>
    <DisplayString Condition="!isEnd() &amp;&amp; !isVariable()">{{ text = {m_pos + sizeof(trimja::EvalString::Offset),[length()]s8} }}</DisplayString>
  </Type>

  <Type Name="trimja::detail::IndexIntoNoDebug&lt;*,*,*&gt;">
    <DisplayString>{{ index = {m_index} }}</DisplayString>
    <Expand>
      <Item Name="index">m_index</Item>
    </Expand>
  </Type>

  <Type Name="trimja::detail::IndexIntoDebug&lt;*,*,*&gt;">
    <DisplayString>{{ index = {m_index}, container = {*m_container} }}</DisplayString>
    <Expand>
      <Item Name="index">m_index</Item>
      <Item Name="container" Condition="m_container">*m_container</Item>
    </Expand>
  </Type>

  <Type Name="trimja::detail::IndexIntoDebug&lt;trimja::Graph,*,*&gt;">
    <DisplayString>{{ path = {m_container->m_path[m_index]} }}</DisplayString>
    <Expand>
      <Item Name="path">m_container->m_path[m_index]</Item>
      <Item Name="in">m_container->m_outputToInput[m_index]</Item>
      <Item Name="out">m_container->m_inputToOutput[m_index]</Item>
      <Item Name="index">m_index</Item>
    </Expand>
  </Type>

  <Type Name="trimja::detail::IndexIntoDebug&lt;trimja::detail::BuildContext,trimja::RuleTag,*&gt;">
    <DisplayString>{{ name = {m_container->rules[m_index].name} }}</DisplayString>
    <Expand>
      <ExpandedItem>m_container->rules[m_index]</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="trimja::detail::IndexIntoDebug&lt;trimja::detail::BuildContext,trimja::PartTag,*&gt;">
    <DisplayString>{{ text = {m_container->parts[m_index]}, type = {m_container->partsType[m_index]} }}</DisplayString>
    <Expand>
      <Item Name="text">m_container->parts[m_index]</Item>
      <Item Name="type">m_container->partsType[m_index]</Item>
    </Expand>
  </Type>

  <Type Name="trimja::detail::IndexIntoDebug&lt;trimja::detail::BuildContext,trimja::BuildCommandTag,*&gt;">
    <DisplayString>{{ out = {m_container->commands[m_index].outStr} }}</DisplayString>
    <Expand>
      <ExpandedItem>m_container->commands[m_index]</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="trimja::detail::IndexIntoDebug&lt;trimja::detail::BuildContext,trimja::NodeTag,*&gt;">
    <DisplayString>{{ node = { m_index } }}</DisplayString>
    <Expand>
      <ExpandedItem>m_index</ExpandedItem>
      <Item Name="command">m_container->nodeToCommand[m_index.m_index]</Item>
    </Expand>
  </Type>

</AutoVisualizer>
